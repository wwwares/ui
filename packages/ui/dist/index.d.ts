import * as _stitches_react_types_styled_component from '@stitches/react/types/styled-component';
import * as _stitches_react_types_css_util from '@stitches/react/types/css-util';
import * as _stitches_react_types_config from '@stitches/react/types/config';
import { VariantProps } from '@stitches/react';
import * as React from 'react';

declare const StyledButton: _stitches_react_types_styled_component.StyledComponent<"button", {
    type?: "default" | "primary" | "action" | "danger" | undefined;
}, {}, _stitches_react_types_css_util.CSS<{}, {
    colors: {
        white: string;
        black: string;
        "maple-50": string;
        "maple-100": string;
        "maple-200": string;
        "maple-300": string;
        "maple-400": string;
        "maple-500": string;
        "maple-600": string;
        "maple-700": string;
        "maple-800": string;
        "maple-900": string;
        "maple-1000": string;
        "blue-50": string;
        "blue-100": string;
        "blue-200": string;
        "blue-300": string;
        "blue-400": string;
        "blue-500": string;
        "blue-600": string;
        "blue-700": string;
        "blue-800": string;
        "blue-900": string;
        "blue-1000": string;
        "green-50": string;
        "green-100": string;
        "green-200": string;
        "green-300": string;
        "green-400": string;
        "green-500": string;
        "green-600": string;
        "green-700": string;
        "green-800": string;
        "green-900": string;
        "green-1000": string;
        "orange-50": string;
        "orange-100": string;
        "orange-200": string;
        "orange-300": string;
        "orange-400": string;
        "orange-500": string;
        "orange-600": string;
        "orange-700": string;
        "orange-800": string;
        "orange-900": string;
        "orange-1000": string;
        "gray-50": string;
        "gray-100": string;
        "gray-200": string;
        "gray-300": string;
        "gray-400": string;
        "gray-500": string;
        "gray-600": string;
        "gray-700": string;
        "gray-800": string;
        "gray-850": string;
        "gray-900": string;
        "gray-950": string;
        "gray-1000": string;
    };
    fonts: {
        sans: string;
    };
    fontSizes: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    space: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    sizes: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    radii: {
        1: string;
        2: string;
        3: string;
        round: string;
    };
    fontWeights: unknown;
    lineHeights: unknown;
    letterSpacings: unknown;
    borderWidths: unknown;
    borderStyles: unknown;
    shadows: unknown;
    zIndices: unknown;
    transitions: unknown;
}, _stitches_react_types_config.DefaultThemeMap, {}>>;
declare type ButtonProps = React.SelectHTMLAttributes<HTMLButtonElement> & VariantProps<typeof StyledButton> & {
    children?: React.ReactNode;
    loading?: boolean;
};
declare const Button: ({ children, disabled, type, loading, ...rest }: ButtonProps) => JSX.Element;

declare const Spinner: _stitches_react_types_styled_component.StyledComponent<"div", {
    inverted?: boolean | "true" | undefined;
}, {}, _stitches_react_types_css_util.CSS<{}, {
    colors: {
        white: string;
        black: string;
        "maple-50": string;
        "maple-100": string;
        "maple-200": string;
        "maple-300": string;
        "maple-400": string;
        "maple-500": string;
        "maple-600": string;
        "maple-700": string;
        "maple-800": string;
        "maple-900": string;
        "maple-1000": string;
        "blue-50": string;
        "blue-100": string;
        "blue-200": string;
        "blue-300": string;
        "blue-400": string;
        "blue-500": string;
        "blue-600": string;
        "blue-700": string;
        "blue-800": string;
        "blue-900": string;
        "blue-1000": string;
        "green-50": string;
        "green-100": string;
        "green-200": string;
        "green-300": string;
        "green-400": string;
        "green-500": string;
        "green-600": string;
        "green-700": string;
        "green-800": string;
        "green-900": string;
        "green-1000": string;
        "orange-50": string;
        "orange-100": string;
        "orange-200": string;
        "orange-300": string;
        "orange-400": string;
        "orange-500": string;
        "orange-600": string;
        "orange-700": string;
        "orange-800": string;
        "orange-900": string;
        "orange-1000": string;
        "gray-50": string;
        "gray-100": string;
        "gray-200": string;
        "gray-300": string;
        "gray-400": string;
        "gray-500": string;
        "gray-600": string;
        "gray-700": string;
        "gray-800": string;
        "gray-850": string;
        "gray-900": string;
        "gray-950": string;
        "gray-1000": string;
    };
    fonts: {
        sans: string;
    };
    fontSizes: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    space: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    sizes: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    radii: {
        1: string;
        2: string;
        3: string;
        round: string;
    };
    fontWeights: unknown;
    lineHeights: unknown;
    letterSpacings: unknown;
    borderWidths: unknown;
    borderStyles: unknown;
    shadows: unknown;
    zIndices: unknown;
    transitions: unknown;
}, _stitches_react_types_config.DefaultThemeMap, {}>>;

export { Button, Spinner, StyledButton };
